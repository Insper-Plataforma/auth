{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Auth Interface","text":"<p>Este m\u00f3dulo define a interface Feign para comunica\u00e7\u00e3o com o microsservi\u00e7o <code>auth-service</code>, respons\u00e1vel pela autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o de usu\u00e1rios.</p>"},{"location":"#objetivo","title":"Objetivo","text":"<p>Facilitar a comunica\u00e7\u00e3o entre microsservi\u00e7os por meio de chamadas REST encapsuladas, utilizando Feign Client, evitando duplica\u00e7\u00e3o de l\u00f3gica HTTP.</p>"},{"location":"#pacote","title":"Pacote","text":"<ul> <li><code>store.auth</code> - Pacote principal que cont\u00e9m a interface Feign e os objetos de entrada e sa\u00edda.</li> </ul>"},{"location":"#estrutura-dos-arquivos","title":"Estrutura dos arquivos","text":"Arquivo Descri\u00e7\u00e3o <code>AuthController.java</code> Interface Feign com os endpoints dispon\u00edveis do microsservi\u00e7o de autentica\u00e7\u00e3o <code>LoginIn.java</code> Objeto de entrada para o login na conta <code>RegisterIn.java</code> Objeto de entrada para o registro da conta <code>SolveOut.java</code> Id da conta que \u00e9 retornado quando realiza o registro <code>TokenOut.java</code> Token da conta que \u00e9 retornado quando realiza o login"},{"location":"arquitetura/","title":"Arquitetura do Auth Service","text":"<p>O servi\u00e7o segue a estrutura t\u00edpica de microsservi\u00e7os com Spring Boot.</p>"},{"location":"arquitetura/#estrutura-de-pastas","title":"Estrutura de Pastas","text":"<pre><code>src/main/java/store/auth/\n\u251c\u2500\u2500 AuthController.java # Interface REST com os endpoints\n\u251c\u2500\u2500 LoginIn.java # DTO de entrada para login\n\u251c\u2500\u2500 RegisterIn.java # DTO de entrada para registro\n\u251c\u2500\u2500 SolveOut.java # DTO de sa\u00edda com id da conta\n\u251c\u2500\u2500 TokenOut.java # DTO de sa\u00edda com token JWT\n</code></pre>"},{"location":"arquitetura/#tecnologias-utilizadas","title":"Tecnologias utilizadas","text":"<ul> <li>Java 17+</li> <li>Spring Boot</li> <li>JWT (para gera\u00e7\u00e3o e verifica\u00e7\u00e3o de tokens)</li> <li>Lombok (para reduzir boilerplate)</li> </ul>"},{"location":"endpoints/","title":"Endpoints da API","text":"<p>Base URL: <code>/auth</code></p>"},{"location":"endpoints/#post-authregister","title":"POST <code>/auth/register</code>","text":"<p>Registra um novo usu\u00e1rio e retorna o token JWT.</p>"},{"location":"endpoints/#request-body","title":"Request Body","text":"<pre><code>{\n  \"name\": \"Ana Helena\",\n  \"email\": \"ana@exemplo.com\",\n  \"password\": \"12345678\"\n}\n</code></pre>"},{"location":"endpoints/#response","title":"Response","text":"<pre><code>{\n    \"token\": \"jwt.token.aqui\"\n}\n</code></pre>"},{"location":"endpoints/#post-authlogin","title":"POST <code>/auth/login</code>","text":"<p>Registra um novo usu\u00e1rio e retorna o token JWT.</p>"},{"location":"endpoints/#request-body_1","title":"Request Body","text":"<pre><code>{\n  \"email\": \"ana@exemplo.com\",\n  \"password\": \"12345678\"\n}\n</code></pre>"},{"location":"endpoints/#response_1","title":"Response","text":"<pre><code>{\n    \"token\": \"jwt.token.aqui\"\n}\n</code></pre>"},{"location":"endpoints/#post-authsolve","title":"POST <code>/auth/solve</code>","text":"<p>Resolve o token JWT e retorna o id da conta.</p>"},{"location":"endpoints/#request","title":"Request","text":"<pre><code>{\n  \"token\": \"jwt.token.aqui\"\n}\n</code></pre>"},{"location":"endpoints/#response_2","title":"Response","text":"<pre><code>{\n    \"id\": \"uuid-da-conta\"\n}\n</code></pre>"},{"location":"entidades/","title":"Entidades","text":""},{"location":"entidades/#loginin","title":"LoginIn","text":"<p>DTO de entrada para autentica\u00e7\u00e3o de usu\u00e1rios.</p> <p>Campos:</p> <ul> <li><code>email</code>: email do usu\u00e1rio</li> <li><code>password</code>: senha em texto puro</li> </ul>"},{"location":"entidades/#registerin","title":"RegisterIn","text":"<p>DTO de entrada para registrar um novo usu\u00e1rio.</p> <p>Campos:</p> <ul> <li><code>name</code>: nome do usu\u00e1rio</li> <li><code>email</code>: email do usu\u00e1rio</li> <li><code>password</code>: senha do usu\u00e1rio</li> </ul>"},{"location":"entidades/#tokenout","title":"TokenOut","text":"<p>DTO de sa\u00edda que representa o token JWT emitido ap\u00f3s login ou registro.</p> <p>Campos:</p> <ul> <li><code>token</code>: string com o JWT gerado</li> </ul>"},{"location":"entidades/#solveout","title":"SolveOut","text":"<p>DTO de sa\u00edda usado para extrair informa\u00e7\u00f5es do token enviado.</p> <p>Campos:</p> <ul> <li><code>idAccount</code>: identificador da conta associado ao token</li> </ul>"},{"location":"fluxo-autenticacao/","title":"Fluxo de Autentica\u00e7\u00e3o","text":"<p>Este \u00e9 o ciclo b\u00e1sico de autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o do sistema:</p>"},{"location":"fluxo-autenticacao/#1-registro-authregister","title":"1. Registro (<code>/auth/register</code>)","text":"<ul> <li>O usu\u00e1rio envia seu nome, email e senha.</li> <li>O servi\u00e7o cria a conta (em outro servi\u00e7o) e retorna um token JWT.</li> </ul>"},{"location":"fluxo-autenticacao/#2-login-authlogin","title":"2. Login (<code>/auth/login</code>)","text":"<ul> <li>O usu\u00e1rio fornece email e senha.</li> <li>Se os dados estiverem corretos, um novo token \u00e9 emitido.</li> </ul>"},{"location":"fluxo-autenticacao/#3-validacao-authsolve","title":"3. Valida\u00e7\u00e3o (<code>/auth/solve</code>)","text":"<ul> <li>Um servi\u00e7o interno envia o token para valida\u00e7\u00e3o.</li> <li>O <code>auth-service</code> extrai o <code>idAccount</code> do token JWT e retorna.</li> </ul>"},{"location":"seguranca/","title":"Seguran\u00e7a","text":"<p>O Auth Service \u00e9 respons\u00e1vel por gerar, validar e decodificar tokens JWT.</p>"},{"location":"seguranca/#funcionamento","title":"Funcionamento","text":"<ol> <li>O usu\u00e1rio faz login ou se registra.</li> <li>Um token JWT \u00e9 gerado e retornado (<code>TokenOut</code>).</li> <li>Esse token \u00e9 usado nos demais servi\u00e7os para autentica\u00e7\u00e3o.</li> </ol>"},{"location":"seguranca/#beneficios-do-jwt","title":"Benef\u00edcios do JWT","text":"<ul> <li>Sem necessidade de sess\u00e3o no servidor</li> <li>Escal\u00e1vel e stateless</li> <li>Informa\u00e7\u00f5es como <code>idAccount</code> ficam dispon\u00edveis no payload</li> </ul>"},{"location":"seguranca/#endpoint-de-verificacao","title":"Endpoint de Verifica\u00e7\u00e3o","text":"<p>O endpoint <code>/auth/solve</code> serve para verificar a autenticidade do token e obter o <code>idAccount</code> associado.</p>"},{"location":"seguranca/#observacoes","title":"Observa\u00e7\u00f5es","text":"<ul> <li>O token deve ser tratado com confidencialidade</li> <li>Recomenda-se uso via header: <code>Authorization: Bearer &lt;token&gt;</code></li> </ul>"},{"location":"setup/","title":"Setup e depend\u00eancias","text":"<p>Este m\u00f3dulo define apenas a interface REST <code>AuthController</code> e os DTOs relacionados.</p>"},{"location":"setup/#requisitos","title":"Requisitos","text":"<ul> <li>Java 17+</li> <li>Lombok</li> </ul>"},{"location":"setup/#como-compilar","title":"Como compilar","text":"<pre><code>mvn clean install\n</code></pre>"},{"location":"setup/#dependencias","title":"Depend\u00eancias","text":"<p>Requisitos no arquivo <code>pom.xml</code>:</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"setup/#como-usar","title":"Como usar","text":"<p>Este m\u00f3dulo \u00e9 usado como depend\u00eancia em <code>auth-service</code>, que implementa de fato a interface.</p> <p>Certifique-se de importar o pacote corretamente ao implementar:</p> <pre><code>@RestController\npublic class AuthResource implements AuthController {\n    // ...\n}\n</code></pre>"}]}